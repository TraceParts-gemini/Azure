@model ViewIssueModel

@if (@IsAuthenticated)
{
    <div id="item-toolbar" class="no-select toolbar-icons">

        @if (@Model.CanEditIssue)
        {
            <div id="action-edit" class="wrapper" title="@GetResource(ResourceKeys.Edit)"><div class="action edit"></div></div>
        }

        @if (CanDoItemAction(UserAction.Edit, ItemAttributeVisibility.Description))
        {
            <div data-attribute-id="@ItemAttributeVisibility.Description.ToString()" id="add-description" class="wrapper" title="@GetResource(ResourceKeys.Description)"><div class="action edit-2"></div></div>
        }

        @if (@Model.CanMoveIssue && !GeminiContext.PermissionsManager.IsHelpdeskUser() && !GeminiContext.PermissionsManager.IsProjectReadOnly(Model.Issue.Project))
        {
            <div id="action-move" class="wrapper" title="@GetResource(ResourceKeys.Move)"><div class="action move"></div></div>
            <div id="action-copy" class="wrapper" title="@GetResource(ResourceKeys.Copy)"><div class="action copy-2"></div></div>
        }

        @if (CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedLinks) && !GeminiContext.PermissionsManager.IsHelpdeskUser())
        {
            <div id="add-link" class="wrapper" title="@GetResource(ResourceKeys.Link)"><div class="action linked"></div></div>
        }

        @if (CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedHierarchy) && !GeminiContext.PermissionsManager.IsHelpdeskUser())
        {
            <div id="add-dependency" class="wrapper" title="@GetResource(ResourceKeys.Dependencies)"><div class="action dependency-find"></div></div>
            <div id="add-new-dependency" class="wrapper" title="@GetResource(ResourceKeys.Dependency)"><div class="action dependency-new"></div></div>
        }

        @if (CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedAttachments))
        {
            <div class="wrapper" title="@GetResource(ResourceKeys.Attachments)"><div class="action attachment"><span id="attachmentupload-hit" data-max-file="@Model.MaxFileUpload"></span></div></div>
        }
        
        @if (@Model.HasUserVoted == null && @Model.CanUserVote)
        {
            <div id="action-vote" class="wrapper" title="@GetResource(ResourceKeys.Vote)"><div class="action vote"></div></div>
        }

        @if (@Model.Issue.Watchers.Find(w => w.Entity.UserId == GeminiContext.User.Entity.Id) == null)
        {
            <div id="action-follow-unfollow" data-alt-title="@GetResource(ResourceKeys.Unfollow)" data-alt-class="bookmark" class="wrapper" title="@GetResource(ResourceKeys.Follow)"><div class="action bookmark"></div></div>
        }
        else
        {
            <div id="action-follow-unfollow" data-alt-title="@GetResource(ResourceKeys.Follow)"  data-alt-class="bookmark-delete" class="wrapper" title="@GetResource(ResourceKeys.Unfollow)"><div class="action bookmark-delete"></div></div>
        }

        @if (@Model.CanDeleteIssue && !GeminiContext.PermissionsManager.IsHelpdeskUser())
        {
            <div id="action-delete" class="wrapper" title="@GetResource(ResourceKeys.Delete)"><div class="action delete"></div></div>
        }

    </div>
}
